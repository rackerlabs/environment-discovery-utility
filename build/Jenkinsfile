#!/usr/bin/env groovy
pipeline {
	agent any
    parameters {
        string(name: 'branch', defaultValue: 'develop', description: '')
        string(name: 'slackChannel', defaultValue: 'edu', description: '')
    }
	stages {
		stage('Checkout') {
			steps {
				slackSend channel: "${slackChannel}", message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Started (<${env.BUILD_URL}|Open>)"
				checkout (
					changelog: true,
					poll: true,
					scm: [ 
						$class: 'GitSCM', 
						branches: [[name: "${params.branch}"]], 
						doGenerateSubmoduleConfigurations: false, 
						extensions: [[$class: 'CleanBeforeCheckout']], 
						submoduleCfg: [], 
						userRemoteConfigs: [[credentialsId: 'james.blake', url: 'git@github.rackspace.com:MicrosoftEng/environment-discovery-utility.git']]
					]
				)
			}
		}
		stage('Zip') {
			steps {
				slackSend channel: "${slackChannel}", message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Zipping files"
				bat 'powershell.exe -ExecutionPolicy Unrestricted -Command .\\build\\Build-ZipFile.ps1 -BuildNumber %BUILD_NUMBER%-%branch%'
			}
		}
	}
	post {
		success {		
            archiveArtifacts artifacts: "build/edu.v${env.BUILD_NUMBER}.zip"
			slackSend channel: "${slackChannel}", color: 'good', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Success (<${env.BUILD_URL}|Open>)"
			slackSend channel: "${slackChannel}", color: 'good', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} (<https://jenkins.mseng.mlsrvr.com/view/EDU/job/edu_ci/${env.BUILD_NUMBER}/artifact/build/edu.v${env.BUILD_NUMBER}-${params.branch}.zip|Download Zip>)"
		}
		failure {
			slackSend channel: "${slackChannel}", color: 'danger', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Failure (<${env.BUILD_URL}|Open>)"
		}
	}
}